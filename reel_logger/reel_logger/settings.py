"""
Django settings for reel_logger project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import toml
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
secret_file = 'secret.toml'
secret_file_path = BASE_DIR / secret_file

if os.path.isfile(secret_file_path):
    with open(secret_file_path, 'r') as f:
        SECRET = toml.load(f)

else:
    SECRET = {}

DJ_CONF = SECRET.get("django", {})
DB_CONF = SECRET.get("database", {})

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = DJ_CONF.get('secret_key', "django-insecure-y9zwionx8mgc6^&(x4)uds+q6dbb6r!cx8uxm67-v8d64*=s%g")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = DJ_CONF.get("debug", True)

ALLOWED_HOSTS = DJ_CONF.get("allowed_hosts", ['.localhost', '127.0.0.1', '[::1]']) # technically insecure

MEDIA_ROOT = DJ_CONF.get('media_path', '/')
MEDIA_URL = "/media/"

if not os.path.exists(MEDIA_ROOT):
    os.makedirs(MEDIA_ROOT)  # Ensure the directory exists

# Application definition

INSTALLED_APPS = [
    'reel_logger',
    'reel_logger_app.apps.ReelLoggerAppConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'accounts'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'reel_logger.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'reel_logger.wsgi.application'

LOGIN_REDIRECT_URL = "index"
LOGOUT_REDIRECT_URL = "index"

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.' + DB_CONF.get('type', 'sqlite3'),
        'NAME': DB_CONF.get('name', BASE_DIR / 'db.sqlite3'),
        "USER": DB_CONF.get('user', ""),
        "PASSWORD": DB_CONF.get('password', ""),
        "HOST": DB_CONF.get('host', ""),
        "PORT": DB_CONF.get('port', ""),
    },
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / "collected-static"

STATICFILES_DIRS = [
    "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Set this to True to avoid transmitting the session and CSRF cookie over HTTP accidentally.
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
